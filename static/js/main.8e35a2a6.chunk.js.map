{"version":3,"sources":["card.js","score.js","reset.js","listcard.js","index.js"],"names":["Card","props","className","src","carte","image","alt","onClick","changeliste","nom","Score","children","Reset","e","newgame","ListCard","useState","listeDisplay","setlisteDisplay","carteSelected","setcarteselected","score","setscore","gameover","setgameover","listeCard","setlisteCard","useEffect","length","maliste","fetch","then","response","json","data","results","forEach","element","push","id","initliste","changeScore","newscore","controlChange","card","findIndex","cardId","ncartes","hasCard","alert","console","log","list","newliste","hazard","parseInt","Math","random","map","uniqid","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAgBeA,EAfF,SAACC,GACb,OACC,mCACC,sBAAKC,UAAWD,EAAMC,UAAtB,UACC,qBACCC,IAAKF,EAAMG,MAAMC,MACjBC,IAAI,QACJC,QAAS,kBAAMN,EAAMO,YAAYP,EAAMG,QACvCF,UAAU,wDAEVD,EAAMG,MAAMK,UCRFC,EAHD,SAACT,GACd,OAAO,sBAAKC,UAAWD,EAAMC,UAAtB,qBAA0CD,EAAMU,aCWzCC,EAZD,SAACX,GACd,OACC,qBAAKC,UAAU,mBAAf,SACC,wBACCK,QAAS,SAACM,GAAD,OAAOZ,EAAMa,QAAQD,IAC9BX,UAAU,kBAFX,SAGED,EAAMU,cCoHII,EApHE,SAACd,GAAW,IAAD,EACae,mBAAS,IADtB,mBACpBC,EADoB,KACNC,EADM,OAEeF,mBAAS,IAFxB,mBAEpBG,EAFoB,KAELC,EAFK,OAGDJ,mBAAS,GAHR,mBAGpBK,EAHoB,KAGbC,EAHa,OAIKN,oBAAS,GAJd,mBAIpBO,EAJoB,KAIVC,EAJU,OAKOR,mBAAS,IALhB,mBAKpBS,EALoB,KAKTC,EALS,KAO3BC,qBAAU,WACT,GAAyB,IAArBF,EAAUG,OAAc,CAC3B,IAAMC,EAAU,GAChBC,MACC,uHAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAAD,OAAcA,EAASE,KAAKC,WACjCJ,MAAK,SAACC,GACNA,EAASI,SAAQ,SAACC,GAEjBR,EAAQS,KAAK,CACZC,GAAIF,EAAO,GACX5B,IAAK4B,EAAO,MACZhC,MACCgC,EAAO,UAAP,KACA,6BAGHX,EAAaG,GACbW,EAAUX,SAGX,CAACJ,IAEJ,IAAMgB,EAAc,SAACC,GACpBpB,EAASoB,IAcJC,EAAgB,SAACC,IAXP,SAACA,GAEhB,IAAe,IADDzB,EAAc0B,WAAU,SAACC,GAAD,OAAYA,IAAWF,EAAKL,MAChD,CACjB,IAAMQ,EAAU5B,EAChB4B,EAAQT,KAAKM,EAAKL,IAClBnB,EAAiB2B,GACjBvB,GAAY,QAEZA,GAAY,GAIbwB,CAAQJ,GACRrB,EAAW0B,MAAM,aAAezC,KAG3BA,EAAc,WACnBiC,EAAYpB,EAAQ,GACpB6B,QAAQC,IAAIhC,GACZqB,EAAUf,IAGLe,EAAY,SAACY,GAElB,IADA,IAAMC,EAAW,GADU,aAG1B,IAAMC,EAASC,SAAyB,GAAhBC,KAAKC,WAKd,IAHDJ,EAASR,WACtB,SAACD,GAAD,OAAUA,EAAKL,KAAOa,EAAKE,GAAQf,OAGnCc,EAASf,KAAKc,EAAKE,KAPM,IAApBD,EAASzB,QAAe,IAU/BV,EAAgBmC,IAajB,OACC,mCACC,qBAAKnD,UAAU,kBAAf,SACC,sBAAKA,UAAU,8BAAf,UACC,cAAC,EAAD,CAAOA,UAAU,0BAAjB,SAA4CmB,IAEtB,IAArBI,EAAUG,OACV,8BACC,oBAAI1B,UAAU,6BAAd,6BAIGqB,EAUJ,qBAAKrB,UAAU,mBAAf,SACC,6CAVDe,EAAayC,KAAI,SAACd,GAAD,OAChB,cAAC,EAAD,CACC1C,UAAU,yBACVM,YAAamC,EAEbvC,MAAOwC,GADFe,UASR,cAAC,EAAD,CAAO7C,QAjCG,SAACD,GACdA,EAAE+C,iBACFnB,EAAY,GAJZrB,EAAiB,IAMjBI,GAAY,IA6BT,qCCxGLqC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.8e35a2a6.chunk.js","sourcesContent":["import React from \"react\";\nconst Card = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<div className={props.className}>\n\t\t\t\t<img\n\t\t\t\t\tsrc={props.carte.image}\n\t\t\t\t\talt=\"perso\"\n\t\t\t\t\tonClick={() => props.changeliste(props.carte)}\n\t\t\t\t\tclassName=\"w-100 img-fluid bg-image hover-zoom cursor-pointer \"\n\t\t\t\t/>\n\t\t\t\t{props.carte.nom}\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default Card;\n","const Score = (props) => {\n\treturn <div className={props.className}>Score : {props.children}</div>;\n};\nexport default Score;\n","const Reset = (props) => {\n\treturn (\n\t\t<div className=\"text-center mt-3\">\n\t\t\t<button\n\t\t\t\tonClick={(e) => props.newgame(e)}\n\t\t\t\tclassName=\"btn btn-primary\">\n\t\t\t\t{props.children}\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Reset;\n","import React, { useState, useEffect } from \"react\";\nimport uniqid from \"uniqid\";\nimport Card from \"./card\";\nimport Score from \"./score\";\nimport Reset from \"./reset\";\n\nconst ListCard = (props) => {\n\tconst [listeDisplay, setlisteDisplay] = useState([]);\n\tconst [carteSelected, setcarteselected] = useState([]);\n\tconst [score, setscore] = useState(0);\n\tconst [gameover, setgameover] = useState(false);\n\tconst [listeCard, setlisteCard] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (listeCard.length === 0) {\n\t\t\tconst maliste = [];\n\t\t\tfetch(\n\t\t\t\t\"https://gateway.marvel.com:443/v1/public/characters/1009165/comics?limit=25&apikey=2f336d6ed425b8bb4bc1b4740acd4648\",\n\t\t\t)\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((response) => response.data.results)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tresponse.forEach((element) => {\n\t\t\t\t\t\t//console.log(element);\n\t\t\t\t\t\tmaliste.push({\n\t\t\t\t\t\t\tid: element[\"id\"],\n\t\t\t\t\t\t\tnom: element[\"title\"],\n\t\t\t\t\t\t\timage:\n\t\t\t\t\t\t\t\telement[\"thumbnail\"][\"path\"] +\n\t\t\t\t\t\t\t\t\"/portrait_uncanny.jpg\",\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tsetlisteCard(maliste);\n\t\t\t\t\tinitliste(maliste);\n\t\t\t\t});\n\t\t}\n\t}, [listeCard]);\n\n\tconst changeScore = (newscore) => {\n\t\tsetscore(newscore);\n\t};\n\n\tconst hasCard = (card) => {\n\t\tconst index = carteSelected.findIndex((cardId) => cardId === card.id);\n\t\tif (index === -1) {\n\t\t\tconst ncartes = carteSelected;\n\t\t\tncartes.push(card.id);\n\t\t\tsetcarteselected(ncartes);\n\t\t\tsetgameover(false);\n\t\t} else {\n\t\t\tsetgameover(true);\n\t\t}\n\t};\n\tconst controlChange = (card) => {\n\t\thasCard(card);\n\t\tgameover ? alert(\"Game Over\") : changeliste();\n\t};\n\n\tconst changeliste = () => {\n\t\tchangeScore(score + 1);\n\t\tconsole.log(carteSelected);\n\t\tinitliste(listeCard);\n\t};\n\n\tconst initliste = (list) => {\n\t\tconst newliste = [];\n\t\twhile (newliste.length !== 8) {\n\t\t\tconst hazard = parseInt(Math.random() * 24);\n\n\t\t\tconst index = newliste.findIndex(\n\t\t\t\t(card) => card.id === list[hazard].id,\n\t\t\t);\n\t\t\tif (index === -1) {\n\t\t\t\tnewliste.push(list[hazard]);\n\t\t\t}\n\t\t}\n\t\tsetlisteDisplay(newliste);\n\t};\n\n\tconst resetCarteSelected = () => {\n\t\tsetcarteselected([]);\n\t};\n\tconst reset = (e) => {\n\t\te.preventDefault();\n\t\tchangeScore(0);\n\t\tresetCarteSelected();\n\t\tsetgameover(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"container h-100\">\n\t\t\t\t<div className=\"row justify-content-center \">\n\t\t\t\t\t<Score className=\"col-12 text-center pt-2\">{score}</Score>\n\n\t\t\t\t\t{listeCard.length === 0 ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1 className=\"text-center fw-normal my-5\">\n\t\t\t\t\t\t\t\tChargement...\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : !gameover ? (\n\t\t\t\t\t\tlisteDisplay.map((card) => (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tclassName=\"col-3 text-center py-2\"\n\t\t\t\t\t\t\t\tchangeliste={controlChange}\n\t\t\t\t\t\t\t\tkey={uniqid()}\n\t\t\t\t\t\t\t\tcarte={card}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"text-center my-5\">\n\t\t\t\t\t\t\t<h1>Game Over</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<Reset newgame={reset}>Nouvelle Partie</Reset>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ListCard;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as mdb from \"mdb-ui-kit\"; // lib\nimport { Input } from \"mdb-ui-kit\"; // module\n\nimport Listcard from \"./listcard\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Listcard />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\"),\n);\n"],"sourceRoot":""}